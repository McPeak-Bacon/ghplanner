version: '3.8'

services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:16-alpine
    container_name: github-planner-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ghplanner
      - POSTGRES_PASSWORD=ghplanner_dev_password
      - POSTGRES_DB=ghplanner
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql:Z
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghplanner"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev

  app:
    image: ${PODMAN_IMAGE:-githubplanner:latest}
    build:
      context: .
      dockerfile: Containerfile
    container_name: github-planner-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=${DATABASE_URL:-postgresql://neondb_owner:npg_OmYxj7pKUZI1@ep-shiny-bonus-a7gj8u7o-pooler.ap-southeast-2.aws.neon.tech/neondb?sslmode=require}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default-nextauth-secret-change-in-production}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-change-in-production}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - RESEND_API_KEY=${RESEND_API_KEY:-}
      - EMAIL_FROM=${EMAIL_FROM:-GitHub Planner <noreply@localhost>}
    ports:
      - "3000:3000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  app-dev:
    build:
      context: .
      dockerfile: Containerfile.dev
    container_name: github-planner-app-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=postgresql://ghplanner:ghplanner_dev_password@postgres:5432/ghplanner?sslmode=disable
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default-nextauth-secret-for-dev}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-for-dev}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - RESEND_API_KEY=${RESEND_API_KEY:-}
      - EMAIL_FROM=${EMAIL_FROM:-GitHub Planner <dev@localhost>}
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload (Podman Z flag for SELinux)
      - .:/app:Z
      # Preserve node_modules and build cache in named volumes for performance
      - node_modules_dev:/app/node_modules
      - next_cache_dev:/app/.next
    networks:
      - app-network
    profiles:
      - dev
    command: sh -lc "npm install --legacy-peer-deps && npm run dev"
    # Improve performance for file watching in containers
    security_opt:
      - label=disable
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  node_modules_dev:
    driver: local
  next_cache_dev:
    driver: local

networks:
  app-network:
    driver: bridge
