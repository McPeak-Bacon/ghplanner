# Cloudflare Pages configuration
# Note: This is for reference only. Your current app uses Docker deployment.
# To use Cloudflare Pages, you would need to significantly modify your architecture.

# For Cloudflare Pages deployment, you would need:
# 1. Convert API routes to edge-compatible functions
# 2. Use edge-compatible database drivers (not standard MongoDB driver)
# 3. Adjust authentication to work at the edge

# Example wrangler.toml for Cloudflare Workers/Pages
name = "githubplanner"
type = "javascript"
account_id = "your-account-id"
workers_dev = true
route = "yourdomain.com/*"
zone_id = "your-zone-id"

[env.production]
name = "githubplanner-production"
routes = [
  { pattern = "yourdomain.com/*", zone_id = "your-zone-id" }
]

[env.production.vars]
MONGODB_URI = "your-mongodb-uri"
NEXTAUTH_URL = "https://yourdomain.com"

# For actual deployment with your current setup:
# Use the GitLab pipeline to deploy Docker container
# Then use Cloudflare as a proxy/CDN in front of it

# Cloudflare configuration recommendations:
# 1. Enable "Proxied" (orange cloud) for your DNS records
# 2. SSL/TLS: Full (strict)
# 3. Always Use HTTPS: On
# 4. Caching Level: Standard
# 5. Browser Cache TTL: 4 hours

# Page Rules (create in Cloudflare dashboard):
# Rule 1: *yourdomain.com/_next/static/*
#   - Cache Level: Cache Everything
#   - Edge Cache TTL: 1 month
#   - Browser Cache TTL: 1 month

# Rule 2: *yourdomain.com/api/*
#   - Cache Level: Bypass
#   - Disable Security
#   - Disable Apps

